<job>
	<script src=".\Brackets.js" language="JScript"/>
	<script src=".\Brackets.vbs" language="VBScript"/>
	<script language="VBScript">
	dim []
	set [] = new brackets
	''msgbox join([].Append(Array(1,2,3),Array(4,5,6)), " ")

''[].foreach [].function("x","msgbox x"),array(1,2,3)
''[].foreach [].lambda("x","msgbox x","",empty),array(1,2,3)

''set plus2 = [].lambda("x","return x+i","i",array(2))
''msgbox plus2(3)

	''[].foreach [].Lambda("i", "wsh.echo i", "wsh", Array(wsh)),[].Append(Array(1,2,3),Array(4,5,6))

	''call [].function("","msgbox objArguments.length")(1,2,3,1,true)

''	call [].lambda("","for i = 0 to ArgumentsCount-1 : wsh.echo Arguments(i) : next","wsh",array(wsh))(1,2,3,"str",true)

''msgbox [].function("i","if i > 1 then : return i*callee(i-1)  : else : return 1 : end if")(6)

	''msgbox join([].Flatten(array(1,2,array(3,array(4,5)),6,array(array(array(array(7)),8),Array(9,10))))," ")

'msgbox [].apply([].function("i,j","return i+j"),array(2,5))

''set z = [].lambda("","wsh.echo i:i=i+1","wsh,i",array(wsh,1))
''[].Times  z,7

''msgbox join([].filter([].function("n","return n<>false"),[].map([].lambda("n","return [].if([].every([].range(2,n-1,1), [].lambda(""i"",""return n mod i<>0"",""n"",array(n))),n,false)","[]",array([])),[].range(2,100,1))), " ")

''set s = [].Once([].lambda("i","wsh.echo i","wsh",array(wsh)))
''s "hello"
''s "hello2"
''s "hello3"

''wsh.echo array(array(1,2,3),array(4,5,6))(1)(0)
''wsh.echo [].zip(array(1,2,3),array(4,5,6))(1)(0)

	</script>
</job>
